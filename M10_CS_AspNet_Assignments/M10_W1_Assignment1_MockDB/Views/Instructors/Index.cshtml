@*@model IEnumerable<Instructor>*@
@* above code is used when not using DTO*@

@model IEnumerable<M10_W1_Assignment1_MockDB.ModelsDto.InstructorDto>

@{
    ViewData["Title"] = "Index";
}

<h1>List of Instructors</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.insID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.firstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.lastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.courseID)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.insID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.firstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.lastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.courseID)
                </td>
                <td onclick="setInstructors('@item.insID', '@item.firstName', '@item.lastName', '@item.email', '@item.courseID'); getInstructors() ">
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }
    </tbody>
</table>

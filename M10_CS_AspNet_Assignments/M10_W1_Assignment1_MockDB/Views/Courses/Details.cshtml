@model M10_W1_Assignment1_MockDB.ModelsDto.CourseDto

@{
    ViewData["Title"] = "Details";
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        id = localStorage.getItem("courseID");
        courseName = localStorage.getItem("courseName");
        courseDesc = localStorage.getItem("courseDesc");

        //using $ sign to access jQuery library

        $("#courseID").append(id);
        $("#courseName").append(courseName);
        $("#courseDesc").append(courseDesc);
        $("#courseTitle").append(courseName + ", ID: " + id);
        @*$("#exampleModal").modal('show');*@
    });


</script>

<h1>Details</h1>

<div>
    <h4 id="courseTitle"></h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.courseID)
        </dt>
        <dd class="col-sm-10" id="courseID">
            @Html.DisplayFor(model => model.courseID)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.courseName)
        </dt>
        <dd class="col-sm-10" id="courseName">
            @Html.DisplayFor(model => model.courseName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.courseDesc)
        </dt>
        <dd class="col-sm-10" id="courseDesc">
            @Html.DisplayFor(model => model.courseDesc)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
